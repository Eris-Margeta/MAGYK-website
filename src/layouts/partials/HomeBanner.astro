---
import GradientTitle from "@/components/GradientTitle.astro";
import ImageMod from "@/components/ImageMod.astro";
import RightArrowBtn from "@/components/RightArrowBtn.astro";
import { markdownify } from "@/lib/utils/textConverter";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
import { Image } from "astro:assets"; // Import Astro's Image component

const homeBanner = (await getEntry(
  "homeBanner",
  "home-banner",
)) as CollectionEntry<"homeBanner">;

const { head, button, image, quote, title } = homeBanner?.data;
const ogImage = "/images/hero.png";
---

<section class="mb-20">
  <div class="md:pt-2 md:pb-22 overflow-hidden">
    <div class="bg-hero-image py-10 relative">
      <!-- New div for background image with overlay and vignette -->
      <div
        class="absolute inset-0 before:content-[''] before:absolute before:inset-0 before:bg-black/50 after:content-[''] after:absolute after:inset-0 after:bg-[radial-gradient(circle_at_center,transparent_0%,rgba(0,0,0,0.8)_100%)]"
      >
        <Image
          src={ogImage}
          alt="Background image for Magyk home hero"
          width={1280}
          height={720}
          class="w-full h-full object-cover"
        />
      </div>
      <div class="container">
        <div class="grid md:grid-cols-12 items-center">
          <div class="md:col-span-6 text-center md:text-left">
            <div class="mb-7" data-aos="fade-up-sm">
              <GradientTitle title={head} />
            </div>
            <h1
              class="xl:text-hero-large xl:leading-[1.12] text-h1-sm font-normal mb-10"
              data-aos="fade-up-sm"
              data-aos-delay="100"
            >
              {title}
            </h1>
            <div
              class="flex flex-col lg:flex-row items-center md:items-start gap-4 lg:gap-8"
              data-aos="fade-up-sm"
              data-aos-delay="150"
            >
              {
                button && button.enable && (
                  <RightArrowBtn
                    link={button.link}
                    label={button.label}
                    className="btn btn-primary py-3"
                  />
                )
              }
              {
                quote && (
                  <p
                    class="text-lg text-text/70"
                    set:html={markdownify(quote)}
                  />
                )
              }
            </div>
          </div>
          <div class="md:col-span-6 pt-10 md:pt-0">
            <div class="relative">
              <canvas
                class="absolute inset-0 w-full h-full overflow-hidden z-10 heroSporeCanvas"
              ></canvas>
              <div class="absolute inset-0 grid place-items-center">
                <div
                  class="flex items-center justify-center rotate-45 w-full h-full"
                >
                  <div
                    class="w-2/6 h-3/6 bg-secondary blur-[80px] rounded-full"
                    data-aos="fade-up-sm"
                    data-aos-delay="100"
                    data-aos-duration="1000"
                  >
                  </div>
                  <div
                    class="w-2/6 h-3/6 bg-tertiary blur-[80px] rounded-full"
                    data-aos="fade-up-sm"
                    data-aos-delay="200"
                    data-aos-duration="1000"
                  >
                  </div>
                </div>
              </div>
              <!-- Rotating Image -->
              <div class="rotate-infinite relative z-20">
                <ImageMod
                  src={image.src}
                  alt={image.alt}
                  width={800}
                  height={800}
                  class="w-full aspect-square"
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  import { sporeCanvas } from "@/lib/utils/particleCanvas";

  document.addEventListener("astro:page-load", () => {
    const targetElementClassName = ".heroSporeCanvas";
    const particleCount = 200;
    const particleMinSize = 1;
    const particleMaxSize = 5;
    sporeCanvas(
      targetElementClassName,
      particleCount,
      particleMinSize,
      particleMaxSize,
    );
  });
</script>

